### MODULES

# Algebra
[Let, Suppose, Given] {equality}. What is {variable}?
[Let, Suppose, Given] {equality}. [Calculate, Compute, Find] {variable}.
What is {variable} in {equality}?
Solve {equality} for {variable}.
Find {variable} such that {equality}.
[Find, Determine] {variable}, given that {equality}.
[Find, Determine] {variable} so that {equality}.
Solve {equality}.

Factor {expression}.
Factor {expression} as fully as possible.
Factor the following polynomial {expression}.
Take the expression {expression} and factor it.
Convert {expression} into a product of factors.
[Write, Rewrite] {expression} as a product of factors.

Solve {equations} for {variable}.
Solve {equations}.
Find the value of {variable} in {equations}.
What is {variable} in {equations}?
Solve {equations} and find the value of {variable}.
Let {equations} and find what {variable} equals to.
What is the value of {variable} for {equations} to hold true?
Solve for {variable} so that {equations} to hold true.

Suppose {equations}.

What is next in {sequence}?
What comes next: {sequence}?
What is the next [term, item, element] in {sequence}?
Following the pattern in {sequence}, what comes next?
Continue {sequence} and give the next term.
Take the sequence {sequence}. What comes next?
Take the sequence {sequence}. What is the next term?

What is the {variable}'th term of {sequence}?
Take the sequence {sequence}. What is the {variable}'th term?
What term is at position {variable} in the sequence {sequence}?
Give the value for the item at position {variable} in the sequence {sequence}.
Find an expression for the {variable}'th term of {sequence}.
Find the closed expression for the term at position {variable} in {sequence}.
Following the pattern in {sequence}, what is {variable}'th term?
Given the sequence {sequence}, what is the {variable}'th term?

# Arithmetic
{p} + {q}
{p}+{q}
[Work out, Calculate, Compute] {p} [+, plus] {q}.
[Add, Put together, Sum, Add together] {p} and {q}.
Total of {p} and {q}.
What is {p} [+, plus] {q}?

Let {self} = {p} * {q}.
Let {self} = {p} + {q}.

{p} - {q}
{p}-{q}
[Calculate, Compute, Work out] {p} [-, minus] {q}.
What is {p} [-, minus, take away] {q}?
What is {q} [less than, subtracted from] {p}?
[Subtract, Remove, Take away] {q} from {p}.

distance
difference
{p} and {q}
{q} and {p}
What is the {} between {}?
Let {self} = {p} - {q}.

[In, Using, Working in] base {base}, what is {p} [+, plus] {q}?
In base {base}, [compute, calculate] {p} [+, plus] {q}.
Use and answer in base {base}. What is {p} [+, plus] {q}?
Use base {base} for the following problem: what is {p} [+, plus] {q}?
[Compute, Calculate, Work out] {p} [+, plus] {q} using base {base}.

[In, Using, Working in] base {base}, what is {p} [-, minus] {q}?
In base {base}, [compute, calculate] {p} [-, minus] {q}.
Use and answer in base {base}. What is {p} [-, minus] {q}?
Use base {base} for the following problem: what is {p} [-, minus] {q}?
[Compute, Calculate, Work out] {p} [-, minus] {q} using base {base}.

{p}{ops.MUL_SYMBOL}{q}
{p} {ops.MUL_SYMBOL} {q}
Calculate {p}{ops.MUL_SYMBOL}{q}.
Work out {p} {ops.MUL_SYMBOL} {q}.
Multiply {p} and {q}.
Product of {p} and {q}.
What is the product of {p} and {q}?
{p} times {q}
What is {p} times {q}?

{p} / {q}
{p} รท {q}
Divide {p} by {q}.
{p} divided by {q}
What is {p} divided by {q}?
[Calculate, Compute, Work out] {p} divided by {q}.
{q} times what equals {p}?

Let {self} be {p} divided by {q}.

What is {value} [^, to the power of] 1/{one_over_exponent}, to the nearest integer?
[Compute, Calculate, Work out] {value} [^, to the power of] 1/{one_over_exponent} to the nearest integer.
What is {value} multiplied by itself 1/{one_over_exponent} times, to the nearest integer?
[Compute, Calculate, Work out] {value} multiplied by itself 1/{one_over_exponent} times to the nearest integer.

What is the {ordinal} root of {value} to the nearest integer?
[Find, Compute, Calculate, Work out] the {ordinal} root of {value} to the nearest integer.

What is the square root of {value} to the nearest integer?
[Compute, Evaluate, Calculate, Work out, Find] the square root of {value} to the nearest integer.

What is the cube root of {value} to the nearest integer?
[Compute, Evaluate, Calculate, Work out, Find] the cube root of {value} to the nearest integer.

{op}
What is {op}?
[Evaluate, Calculate, Compute, Work out] {op}.
What is the value of {op}?

Let {self} be {op}.

Simplify {exp}.
Simplify {exp} [as far as possible, completely, fully].
Completely simplify {exp}.
Completely simplify the following expression: {exp}.
[Write, Rewrite] {exp} in its simplest form.
[Write, Rewrite] {exp} as simply as possible.
Simplify the following expression: {exp}.

# Calculus
Find the {nth} derivative of {eq} wrt {var}.
What is the {nth} derivative of {eq} wrt {var}?
Differentiate {eq} with respect to {var}.
Differentiate {eq} wrt {var}.
What is the derivative of {eq} wrt {var}?
Find the {nth} derivative of {eq}.
What is the {nth} derivative of {eq}?
Differentiate {eq}.
What is the derivative of {eq}?
Let {fn}({variables}) be the {nth} derivative of {eq}.

# Comparisons
Which is [bigger, greater, larger]: {left} or {right}?
[Between, Of, Comparing] {left} and {right}, which is [bigger, greater, larger]?
Is {left} or {right} [bigger, greater, larger]?
Comparing {left} and {right}, which has the [biggest, greatest, largest] value?

Which is smaller: {left} or {right}?
[Between, Of, Comparing] {left} and {right}, which is smaller?
Is {left} or {right} smaller?
Comparing {left} and {right}, which has the [lowest, smallest] value?

Is {left} {ops.LT_SYMBOL} {right}?
Is {left} [less, smaller] than {right}?

Is {left} {ops.LE_SYMBOL} {right}?
Is {left} less than or equal to {right}?
Is {left} [at most, at most as big as] {right}?

Is {left} {ops.GT_SYMBOL} {right}?
Is {left} [greater, bigger] than {right}?

Is {left} {ops.GE_SYMBOL} {right}?
Is {left} greater than or equal to {right}?
Is {left} [at least, at least as big as] {right}?

Does {left} {ops.EQ_SYMBOL} {right}?
Are {left} and {right} equal?
Is {left} equal to {right}?
Do {left} and {right} have the same value?

Is {left} {ops.NE_SYMBOL} {right}?
Is {left} not equal to {right}?
Are {left} and {right} [unequal, nonequal, non-equal]?
Do {left} and {right} have different values?

What is the {adjective} value in {values_template}?
Which is the {adjective} value?

biggest
smallest

What is the {adjective} to {target} in {values_template}?
Which is the {adjective} to {target}?

closest
nearest

[Sort, Put, Place] {unsorted_template} in {direction} order.
[Sort, Order] {unsorted_template}.
Sort {unsorted_template}.

ascending
increasing
descending
decreasing

# Measurement
meter
kilometer
centimeter
millimeter
micrometer
nanometer

meters
kilometers
centimeters
millimeters
micrometers
nanometers

second
minute
hour
day
week
millisecond
microsecond
nanosecond

seconds
minutes
hours
days
weeks
milliseconds
microseconds
nanoseconds

year
decade
century
millennium
month

years
decades
centuries
millennia
months

kilogram
tonne
gram
milligram
microgram
nanogram

kilograms
tonnes
grams
milligrams
micrograms
nanograms

litre
millilitre

litres
millilitres

How many {target_name} [are there, fit, can fit] in {base_value} {base_name}?
What is {base_value} {base_name} in {target_name}?
[Convert, Rewrite, Transform, Translate] {base_value} {base_name} [to, into] {target_name}.
[Write, Express] {base_value} {base_name} in {target_name}.
Write {base_value} {base_name} expressed in {target_name}.

How many {target_name} [are there, fit, can fit] in {base_value} {base_symbol}?
What is {base_value} {base_symbol} in {target_name}?
[Convert, Rewrite, Transform, Translate] {base_value} {base_symbol} [to, into] {target_name}.
[Write, Express] {base_value} {base_symbol} in {target_name}.
Write {base_value} {base_symbol} expressed in {target_name}.

How many {target_name} [are there, fit, can fit] in {base_value} of a {base_name}?
What is {base_value} of a {base_name} in {target_name}?
[Write, Express] {base_value} of a {base_name} in {target_name}.

AM
PM

What time is it {duration} minutes before {end}?
What is the time {duration} minutes before {end}?
[Find, Work out, Compute, Calculate] the time {duration} minutes before {end}.
What was {end} {duration} minutes earlier?

What time is it {duration} minutes after {start}?
What is the time {duration} minutes after {start}?
[Find, Work out, Compute, Calculate] the time {duration} minutes after {start}.
What will {start} be {duration} minutes later?

How many minutes [are there, fit, can fit] between {start} and {end}?
[Write, Work out, Compute, Calculate, Express, Find] the number of minutes between {start} and {end}.

# Numbers

True
False

ten 
hundred 
thousands
millions
billions
trillions
quadrillions
quintillions
sextillions
septillions
octillions
nonillions
decillions

10
100
1000
10000
100000
1000000
10000000
100000000

units
tens
hundreds

What is the {place_name} digit of {integer}?

the nearest {round_to}
the nearest integer
{dps} decimal place
{dps} dp
{dps} decimal places
{dps} dps

Round {input} to {description}.
What is {input} rounded to {description}?
Take {input} and round it to {description}.

composite
a composite number
prime
a prime number

Is {integer} {attribute}?

Is {maybe_factor} a [factor, multiple] of {value}?
Is {maybe_factor} one of the factors of {value}?
Does {maybe_factor} divide {value}?
Does {value} divided by {maybe_factor} yield a whole number?
Can {maybe_factor} divide {value}?
Is it possible for {maybe_factor} to divide {value}?

Is {value} even?

What are the prime factors of {integer}?
[List, Find, Give, Provide, State] the prime factors of {integer}.
Perform a prime factorisation of {integer} and list the result.
What does a prime factorisation of {integer} yield?
What are the prime numbers that {integer} is composed of?

least
lowest
smallest

[Calculate, Compute, Find, Work out, State, Give, Provide] the {adjective} common multiple of {p} and {q}.
What is the {adjective} common multiple of {p} and {q}?

What is the common denominator of {p} and {q}?
[Find, Compute, Calculate, Find, Work out] the common denominator of {p} and {q}.

greatest
highest
common
divisor
factor

[Calculate, Compute, Find, Work out, State, Give, Provide] the {adjective} of {p} and {q}.
What is the {adjective} of {p} and {q}?

Let {self} be the {adjective} of {p} and {q}.

[Calculate, Compute, Find, Work out, State, Give] the remainder when {p} is divided by {q}.
What is the remainder when {p} is divided by {q}?

Let {self} be the remainder when {p} is divided by {q}.

{from_str} (base {from_base}) to base {to_base}
[Convert, Transform, Translate] {from_str} (base {from_base}) to base {to_base}.
[Write, Rewrite, Give, Express] {from_str} (base {from_base}) in base {to_base}.
What is {from_str} (base {from_base}) in base {to_base}?

# Polynomials
Express {expression} as {canonical} and give {target}.
Rearrange {expression} to {canonical} and give {target}.
Express {expression} in the form {canonical} and give {target}.
Rearrange {expression} to the form {canonical} and give {target}.

What is {composed}?
[Calculate, Give, Determine, Compute, Find, State] {composed}.

Let {self} be {composed}.
Let {intermediate} = {composed}.

Expand {expression}.

Collect the terms in {unsimplified}.
Let {function} = {unsimplified}.

Simplify {unsimplified} assuming {variable} is positive.

Simplify {unsimplified} assuming {variable} is positive.
Simplify {unsimplified} [as far as possible, completely, fully] assuming {variable} is positive.
Completely simplify {unsimplified} assuming {variable} is positive.
Completely simplify the following expression, assuming {variable} is positive: {unsimplified}.
[Write, Rewrite] {unsimplified} in its simplest form, assuming {variable} is positive.
[Write, Rewrite] {unsimplified} as simply as possible, assuming {variable} is positive.
Simplify the following expression, assuming {variable} is positive: {unsimplified}.

# Probability
pick
picking

the sequence is {sequence}

letters picked without replacement from

{random_variable_capitalize}. What is prob of {event}?
{random_variable_capitalize}. [Calculate, Give, Determine, Compute, Find, State] prob of {event}.
What is prob of {event} when {random_variable}?
[Calculate, Give, Determine, Compute, Find, State] prob of {event} when {random_variable}.

# Answer Templates
Answer:
The answer is:
The correct answer is:
The answer is
The correct answer is

### UTIL

# Composition
Let {function} = {polynomial}.

# Display
zero
one
two
three
four
five
six
seven
eight
nine
ten
eleven
twelve
thirteen
fourteeen
fifteen
sixteen
seventeen
eighteen
nineteen

twenty
thirty
fourty
fifty
sixty
seventy
eighty
ninety

trillion
billion
million
thousand
hundred

half
third
quarter
fifth
sixth
seventh
eighth
ninth
tenth
eleventh
twelth
thirteenth
fourteenth
fifteenth
sixteenth
seventeenth
eighteenth
nineteenth
twentieth

halves
thirds
quarters
fifths
sixths
sevenths
eighths
ninths
tenths
elevenths
twelths
thirteenths
fourteenths
fifteenths
sixteenths
seventeenths
eighteenths
nineteenths
twentieths

!ORDINALS! zeroth
!ORDINALS! first
!ORDINALS! second
!ORDINALS! third
!ORDINALS! fourth
!ORDINALS! fifth
!ORDINALS! sixth
!ORDINALS! seventh
!ORDINALS! eighth
!ORDINALS! ninth
!ORDINALS! tenth
!ORDINALS! eleventh
!ORDINALS! twelth
!ORDINALS! thirteenth
!ORDINALS! fourteenth
!ORDINALS! fifteenth
!ORDINALS! sixteenth
!ORDINALS! seventeenth
!ORDINALS! eighteenth
!ORDINALS! nineteenth
!ORDINALS! twentieth

and